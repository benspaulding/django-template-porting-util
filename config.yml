##
#   Configuration file for django-template-porting-util.
##

extensions:
# When adding the extension to template references (via the -x or
# --add-extension option), references that already end with any of
# those listed below will be skipped.
    - css
    - html
    - js
    - json
    - txt
    - xml
    - yml
    - yaml


relations:
    mapping:
# It would be nice if the ``related_name`` attribute was accounted
# for dynamically, but that is really, really complicated. So this
# is the compromise.
#
# Any get_foo_list and get_foo_count methods will be replaced with
# foo_set.all and foo_set.count, respectively, unless there is a
# mapping below.
        - old: get_staffmember
          new: bylines
        - old: get_choice
          new: choices

    skip:
# When updating file field syntax (via the -f or --update-file-fields
# option) or relations (via the -r or --update-relations options) the
# following methods will be left untouched (in addition to all model
# methods found within settings.INSTALLED_APPS).
        # Django magic model methods.
          # http://docs.djangoproject.com/en/dev/ref/models/instances/#get-absolute-url
        - get_absolute_url
          # http://docs.djangoproject.com/en/dev/ref/models/instances/#get-foo-display
          # Need to special case ``get_foo_display`` somehow, as ``foo`` is dynamic.
        - get_foo_display
          # http://docs.djangoproject.com/en/dev/ref/models/instances/#get-next-by-foo-kwargs-and-get-previous-by-foo-kwargs
        - get_next_in_order
        - get_previous_in_order
        # Old skool comments methods. Leave these alone just to be tidy.
        - get_deletion_url
        - get_flag_url
        - get_good_karma_total
        - get_karma_total

    update:
# When updating relations (via the -r or --update-relations
# options) methods listed below will be forced to a property,
# i.e. object.get_foo ==> object.foo.
#
# This is valuable when the majority of ``get_foo`` references are
# relations that need to be updated but there is an actual model
# method called ``get_foo`` (and would thus normally be skipped)
# that has minimal usage. This simply lets you choose which one
# you want to correct by hand: the relation or the method.
        # Weblogs methods that did not exist in Old Ellington.
        - get_author
        - get_author_list
        # Obscure CombinedPoll model method.
        - get_choice_list
